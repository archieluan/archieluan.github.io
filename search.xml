<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello world，我叫栾书航！</title>
    <url>/2023/02/17/my-first-blog/</url>
    <content><![CDATA[<p>​	</p>
<hr>
<p>大家好，我叫栾书航，一个集阳光、帅气与智慧于一身的男人…</p>
<p>​	一直很想搭建一个人网站，但是因为时间和技术问题，被耽误了。这次借着初步掌握python程序，手感还热乎的时候，赶紧将它搭建起来了。</p>
<p>​	时间还是太赶了，萨凡纳的作业很多，老师也非常的严格，想得到一个好成绩，确实是不容易的事情，因此想在课余时间来学习其他新的知识，也需要很大的勇气。</p>
<p>​	对于这个博客，我的初步计划主要以分享个人作品、杂七杂八的经验为主。通过不断学习，来慢慢将自己对于网页和生活中的idea加入其中。</p>
<p>​	<strong>So, be knowledgeable, be healthy, be safe!</strong></p>
]]></content>
      <categories>
        <category>通告</category>
      </categories>
      <tags>
        <tag>通告</tag>
      </tags>
  </entry>
  <entry>
    <title>经验：解决了关于Hexo本地图片无法加载的问题</title>
    <url>/2023/02/18/solve-the-bug-of-the-image/</url>
    <content><![CDATA[<p>这几天上网找了很多方式都没有完美解决问题，后来查看了官方文档后终于解决了问题（完美解决），现在贴出来如下。建议以后大家遇到了问题也先去看看官方文档：<a class="link" href="https://hexo.io/zh-cn/docs">https://hexo.io/zh-cn/docs <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="解决方案如下："><a href="#解决方案如下：" class="headerlink" title="解决方案如下："></a>解决方案如下：</h3><h4 id="1-更改配置："><a href="#1-更改配置：" class="headerlink" title="1. 更改配置："></a>1. 更改配置：</h4><p>在根目录下配置文件<code>_config.yml</code> 中有 <code>post_asset_folder:false改为true</code>。这样在建立文件时，<code>Hexo</code>会自动建立一个与文章同名的文件夹，这样就可以把与该文章相关的所有资源（图片）都放到那个文件夹里方便后面引用。如这里我放了一张test.jpg的图片。</p>
<h4 id="2-git-bash安装插件："><a href="#2-git-bash安装插件：" class="headerlink" title="2.git bash安装插件："></a>2.git bash安装插件：</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/7ym0n/hexo-asset-image --save</span><br></pre></td></tr></table></figure></div>

<p>（这是个修改过的插件，经测试无问题），使用这个插件来引入图片，而不是网上那些方法里说的用传统md语法相对路径的方法。</p>
<h4 id="3-MD图片代码："><a href="#3-MD图片代码：" class="headerlink" title="3. MD图片代码："></a>3. MD图片代码：</h4><p>（最重要的！！！）插入图片时用这种方式：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img test.jpg This is an test image %&#125;</span><br></pre></td></tr></table></figure></div>

<p>　　　　　<em><strong>*注意”asset_img”是前缀！！（我写错了很多次），其中test.jpg就是你要引用的图片，我这里就是test.jpg，后面的This is an test image是图片描述，可以自己修改。*</strong></em></p>
<h4 id="4-这样就能成功显示了，测试下吧："><a href="#4-这样就能成功显示了，测试下吧：" class="headerlink" title="4. 这样就能成功显示了，测试下吧："></a>4. 这样就能成功显示了，测试下吧：</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></div>







<h3 id><a href="#" class="headerlink" title></a></h3><h3 id="-1"><a href="#-1" class="headerlink" title></a></h3><p>部分转载于:<a class="link" href="https://www.cnblogs.com/Jesee/p/11234387.html">https://www.cnblogs.com/Jesee/p/11234387.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>               </p>
]]></content>
      <categories>
        <category>经验笔记</category>
        <category>程序向</category>
        <category>网页设计</category>
      </categories>
      <tags>
        <tag>Debug</tag>
        <tag>网页设计</tag>
        <tag>bug烦死了！</tag>
      </tags>
  </entry>
  <entry>
    <title>更新：简历与作品集</title>
    <url>/2023/02/17/my-resume-and-artstation-link/</url>
    <content><![CDATA[<p>上传了简历和作品集，在右上方栏目的“ABOUT”中，接下来我会通过发布文章来展示一些其他作品，并开放留言板模块，希望得到大佬们的指点~</p>
  <img lazyload src="/images/loading.svg" data-src="/2023/02/17/my-resume-and-artstation-link/my-resume-and-artstation-link.png" class title="This is a screenshot">  
]]></content>
      <categories>
        <category>通告</category>
      </categories>
      <tags>
        <tag>通告</tag>
      </tags>
  </entry>
  <entry>
    <title>作品：《戒之歌》-Animation</title>
    <url>/2020/10/15/Ring-Animation/</url>
    <content><![CDATA[<h3 id="Introduction："><a href="#Introduction：" class="headerlink" title="Introduction："></a>Introduction：</h3><p>中文名：《戒之歌》，英文名：《The darkest hour before the dawn》。这个作品是我在本科，开题答辩的时候做出的demo，当时设想的背景非常宏大。可惜因为毕设团队都参加了实习，最后夭折了。</p>
<h3 id="Background"><a href="#Background" class="headerlink" title="Background:"></a>Background:</h3><p>在自然之婴诞生之时，时空产生平行空间，两个误入其中的不同种族分别带走了其不同的灵魂部分，并被扶养长大。因为在残酷的战场中，切身感受到身边的杀戮与残酷，因此激发了自然之子的融合，拥有沟通万物之力的她成功拔下战场中心的守护之剑并沟通巨龙平息战争。</p>
<h3 id="Pipeline："><a href="#Pipeline：" class="headerlink" title="Pipeline："></a>Pipeline：</h3><p>该作品主要由3dsmax、UE4、AE完成。</p>
<h3 id="Video"><a href="#Video" class="headerlink" title="Video:"></a>Video:</h3><h4 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube:"></a>YouTube:</h4><iframe width="900" height="450" src="https://www.youtube.com/embed/uKfmAQI5Gsk?list=PLO9ob5u34jntOz-Y-J4KQ5Uwixd1_VsNA" title="《The darkest hour before the dawn》" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>



<h3 id="Highres-Screenshot："><a href="#Highres-Screenshot：" class="headerlink" title="Highres Screenshot："></a>Highres Screenshot：</h3><p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/058/675/327/large/shuhang-luan-1667809323904.jpg?1674708287" alt="The darkest hour is that before the dawn"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/058/675/329/large/shuhang-luan-03.jpg?1674708293" alt="The darkest hour is that before the dawn"></p>
<h3 id><a href="#" class="headerlink" title></a><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/058/675/324/large/shuhang-luan-02.jpg?1674708361" alt="The darkest hour is that before the dawn"><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/058/675/331/large/shuhang-luan-01.jpg?1674708297" alt="The darkest hour is that before the dawn"></h3><h3 id="Game-Screenshot"><a href="#Game-Screenshot" class="headerlink" title="Game Screenshot:"></a>Game Screenshot:</h3><p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/610/326/large/shuhang-luan-highresscreenshot00002.jpg?1676760523" alt="The darkest hour is that before the dawn"><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/610/334/large/shuhang-luan-highresscreenshot00009.jpg?1676760530" alt="The darkest hour is that before the dawn"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/058/675/334/large/shuhang-luan-a9dbe2a4fd0c0b2e490374b0d0b8644.jpg?1674708327" alt="The darkest hour is that before the dawn"></p>
]]></content>
      <categories>
        <category>作品集</category>
        <category>美术向</category>
        <category>CG动画</category>
      </categories>
      <tags>
        <tag>个人作品</tag>
        <tag>3D动画</tag>
        <tag>CG</tag>
      </tags>
  </entry>
  <entry>
    <title>作品：《MoJee》-Animation</title>
    <url>/2021/01/11/MoJee-Animation/</url>
    <content><![CDATA[<h3 id="Introduction："><a href="#Introduction：" class="headerlink" title="Introduction："></a>Introduction：</h3><p>《MoJee》，我的毕业设计动画，团队由两人组成，队友胡梓雍负责二维角色和场景概念的创作，我作为导演负责剩下所有，制作时长两个半月。我也是通过这个作品，申请到了国外的众多学校。现在回头看看，当时制作手法较为笨拙，也暴露了很多细节上的问题。</p>
<h3 id="Background"><a href="#Background" class="headerlink" title="Background:"></a>Background:</h3><p>MoJee因爱而生，是生活在原始森林里的小野人，长期的营养不良导致他非常瘦弱，令人怜惜。但他心地淳朴，乐观且活泼。他一生都在追求着功夫的最高境界，为此独自离开族群，飘洋过海来到仙岛，向猴子大师求学武艺。</p>
<p>而这个小野人也代表着作者本身，我希望像他一样，千山万水，只为追求心中的那个梦想。</p>
<h3 id="Pipeline："><a href="#Pipeline：" class="headerlink" title="Pipeline："></a>Pipeline：</h3><p>该作品主要由3dsmax、Maya、UE4、AE完成。</p>
<h3 id="Video"><a href="#Video" class="headerlink" title="Video:"></a>Video:</h3><h4 id="Flash-video"><a href="#Flash-video" class="headerlink" title="Flash video:"></a>Flash video:</h4><iframe width="900" height="400" src="https://www.youtube.com/embed/AtUuJvBMirQ" title="MoJee快闪剪辑版" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>



<h4 id="Full-video"><a href="#Full-video" class="headerlink" title="Full video :"></a>Full video :</h4><iframe width="900" height="500" src="https://www.youtube.com/embed/hzk-pTPDPsQ" title="MoJee" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>



<h3 id="Highres-Screenshot："><a href="#Highres-Screenshot：" class="headerlink" title="Highres Screenshot："></a>Highres Screenshot：</h3><p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/609/988/large/shuhang-luan-1617252276-1.jpg?1676759601" alt="MoJee"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/610/018/large/shuhang-luan-main-00418.jpg?1676759678" alt="MoJee"></p>
<img lazyload src="/images/loading.svg" data-src="/2021/01/11/MoJee-Animation/HighresScreenshot00013.jpg" class title="This is an mojee image">

<img lazyload src="/images/loading.svg" data-src="/2021/01/11/MoJee-Animation/HighresScreenshot00015.jpg" class title="This is an mojee image">

<img lazyload src="/images/loading.svg" data-src="/2021/01/11/MoJee-Animation/HighresScreenshot00014.jpg" class title="This is an mojee image">

<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/609/992/large/shuhang-luan-highresscreenshot00002.jpg?1676759607" alt="MoJee"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/609/994/large/shuhang-luan-highresscreenshot00005.jpg?1676759614" alt="MoJee"></p>
<h3 id><a href="#" class="headerlink" title></a><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/609/995/large/shuhang-luan-highresscreenshot00016.jpg?1676759623" alt="MoJee"><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/609/999/large/shuhang-luan-highresscreenshot00017.jpg?1676759632" alt="MoJee"></h3><p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/610/009/large/shuhang-luan-highresscreenshot00019.jpg?1676759658" alt="MoJee"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/610/017/large/shuhang-luan-highresscreenshot00020.jpg?1676759670" alt="MoJee"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/610/005/large/shuhang-luan-highresscreenshot00018.jpg?1676759645" alt="MoJee"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/610/027/large/shuhang-luan-main-00681.jpg?1676759690" alt="MoJee"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/610/022/large/shuhang-luan-main-00627.jpg?1676759684" alt="MoJee"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/610/033/large/shuhang-luan-main-00761.jpg?1676759702" alt="MoJee"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/610/030/large/shuhang-luan-main-00725.jpg?1676759696" alt="MoJee"></p>
<h3 id="-1"><a href="#-1" class="headerlink" title></a><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/610/036/large/shuhang-luan-main-00859.jpg?1676759714" alt="MoJee"></h3><p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/610/034/large/shuhang-luan-main-00824.jpg?1676759708" alt="MoJee"></p>
]]></content>
      <categories>
        <category>作品集</category>
        <category>美术向</category>
        <category>卡通动画</category>
      </categories>
      <tags>
        <tag>个人作品</tag>
        <tag>3D动画</tag>
        <tag>卡通</tag>
      </tags>
  </entry>
  <entry>
    <title>作品：《Feast》-Animation</title>
    <url>/2022/06/02/Feast-Animation/</url>
    <content><![CDATA[<h3 id="Introduction："><a href="#Introduction：" class="headerlink" title="Introduction："></a>Introduction：</h3><p>《Feast》，是我在SCAD研一的团队合作项目，由8个队员合作完成，每个人都有分工。我主要负责：角色模型+绑定+动画的pipeline，最后承担部分镜头的灯光与渲染。</p>
<h3 id="Background"><a href="#Background" class="headerlink" title="Background:"></a>Background:</h3><p>该作品描述了一个邋遢男人，在家中遇见了“好邻居“蟑螂的故事。蟑螂与邋遢男人之间斗智斗勇，最终蟑螂团队获胜，并享用了家中美食的盛宴，故事充满了趣味性。该作品采用风格化的形式，将角色卡通化、拟人化、夸张化。</p>
<h3 id="Pipeline："><a href="#Pipeline：" class="headerlink" title="Pipeline："></a>Pipeline：</h3><p>Maya、blender。</p>
<h3 id="Video"><a href="#Video" class="headerlink" title="Video:"></a>Video:</h3><h4 id="Full-video"><a href="#Full-video" class="headerlink" title="Full video :"></a>Full video :</h4><iframe width="900" height="450" src="https://www.youtube.com/embed/zZT2eZ7wx0A?list=PLO9ob5u34jntOz-Y-J4KQ5Uwixd1_VsNA" title="FEAST" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>



<h3 id="Highres-Screenshot："><a href="#Highres-Screenshot：" class="headerlink" title="Highres Screenshot："></a>Highres Screenshot：</h3><p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/612/157/large/shuhang-luan-647ba9fde331fa6eeaea2178cf3377c.jpg?1676766769" alt="Feast"></p>
<h3 id><a href="#" class="headerlink" title></a><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/612/151/large/shuhang-luan-8255cbc0227de1aa96de01105ffbb76.jpg?1676766752" alt="Feast"></h3><p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/612/147/large/shuhang-luan-6745ad68ec8659db98f0b02e48db7ee.jpg?1676766748" alt="Feast"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/612/155/large/shuhang-luan-e9d3f16320ca3b84a87e69dbc6922d8-1.jpg?1676766762" alt="Feast"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/612/143/large/shuhang-luan-00777a638273dc7fc66a9ea7d53bab2.jpg?1676766738" alt="Feast"><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/612/154/large/shuhang-luan-cb010db95b1ce1d947a248442c175de.jpg?1676766759" alt="Feast"><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/612/153/large/shuhang-luan-47481f6547245bacd2c69a1f07d7a15.jpg?1676766756"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/612/145/large/shuhang-luan-4556c4ce7d144cb5c35a53356cb51ac.jpg?1676766742" alt="Feast"></p>
<h3 id="Process-Screenshot"><a href="#Process-Screenshot" class="headerlink" title="Process Screenshot"></a>Process Screenshot</h3><h4 id="分工部分截图："><a href="#分工部分截图：" class="headerlink" title="分工部分截图："></a>分工部分截图：</h4><p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/612/185/large/shuhang-luan-5b48efec18a9be56103bb6493d4cf9f.jpg?1676766895" alt="Feast" style="zoom: 67%;"><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/612/165/large/shuhang-luan-df0870434ef7df9161adaef136d4616.jpg?1676766792" alt="Feast" style="zoom: 50%;"><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/612/160/large/shuhang-luan-room-v04.jpg?1676766785" alt="Feast" style="zoom: 67%;"></p>
<img lazyload src="/images/loading.svg" data-src="/2022/06/02/Feast-Animation/shuhang-luan-a24793ffdf7e9d070cd847770e0c7e7.jpg" class title="This is an test image">

<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/612/164/large/shuhang-luan-b0b6aee5d40e1f9deab225ee0569a01.jpg?1676766790" alt="Feast" style="zoom: 50%;"><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/612/162/large/shuhang-luan-4570cdc082d4bd21c933f0bc874feca.jpg?1676766788" alt="Feast" style="zoom: 50%;"></p>
]]></content>
      <categories>
        <category>作品集</category>
        <category>美术向</category>
        <category>卡通动画</category>
      </categories>
      <tags>
        <tag>个人作品</tag>
        <tag>3D动画</tag>
        <tag>卡通</tag>
        <tag>团队作品</tag>
      </tags>
  </entry>
  <entry>
    <title>作品：用Python创建罗马文字图形</title>
    <url>/2022/11/18/Practice-plane-composition/</url>
    <content><![CDATA[<h2 id="Completed-Image："><a href="#Completed-Image：" class="headerlink" title="Completed Image："></a>Completed Image：</h2><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/616/049/small/shuhang-luan-wi23-v705-p1-luanshuhang.jpg?1676782321" alt="img" style="zoom: 80%;">



<h2 id="Introduction："><a href="#Introduction：" class="headerlink" title="Introduction："></a>Introduction：</h2><p>在我练习Python的时候，我观察了罗马字体，发现如果将把它放在平面构成里，它看起来也非常漂亮。因此我试着将它构建了出来。</p>
<h2 id="Reference："><a href="#Reference：" class="headerlink" title="Reference："></a>Reference：</h2><p>大致模仿了罗马文字圆形形式，比例非常好。</p>
<img lazyload src="/images/loading.svg" data-src="/2022/11/18/Practice-plane-composition/1676782386825.jpg" class title="This is an roman image">



<h2 id="Design-thinking"><a href="#Design-thinking" class="headerlink" title="Design thinking:"></a>Design thinking:</h2><h3 id="图形函数制作"><a href="#图形函数制作" class="headerlink" title="图形函数制作"></a>图形函数制作</h3><ul>
<li>首先以turtle库为基本库绘制图像：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br></pre></td></tr></table></figure></div>

<ul>
<li>再创建函数并定义函数变量，以创建 “m” 为例</li>
<li>并创建镜像：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">m_word</span>(<span class="params">t,x_pos,y_pos,scale</span>):</span><br><span class="line"></span><br><span class="line">    t.setheading(<span class="number">0</span>)</span><br><span class="line">    scale = <span class="number">0.6</span> * scale</span><br><span class="line">    <span class="keyword">for</span> mirror <span class="keyword">in</span> [<span class="number">1</span>,-<span class="number">1</span>]:</span><br><span class="line">        <span class="comment"># basic</span></span><br><span class="line">        t.pu()</span><br><span class="line">        t.goto(x_pos+<span class="number">20</span>,y_pos-<span class="number">10</span>)</span><br><span class="line">        t.pd()</span><br><span class="line">        t.pencolor(<span class="string">&quot;#580000&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<ul>
<li>然后通过判定，进行各种绘画</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#draw</span></span><br><span class="line"><span class="keyword">if</span> mirror:</span><br><span class="line">    t.lt(<span class="number">90</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    t.lt(<span class="number">90</span>+<span class="number">180</span>*mirror)</span><br><span class="line">t.fillcolor(<span class="string">&quot;#580000&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.circle(<span class="number">100</span>*scale,<span class="number">270</span>*mirror)</span><br><span class="line">t.circle(<span class="number">200</span> *scale,-<span class="number">90</span>*mirror)</span><br><span class="line">t.circle(<span class="number">180</span> *scale,-<span class="number">90</span>*mirror)</span><br><span class="line">t.circle(<span class="number">130</span> *scale,-<span class="number">70</span>*mirror)</span><br><span class="line">t.seth(-<span class="number">90</span>*mirror)</span><br><span class="line">t.fd(<span class="number">200</span>*scale*mirror)</span><br><span class="line">t.end_fill()</span><br><span class="line"></span><br><span class="line"> t.up()</span><br><span class="line"> t.fd(<span class="number">20</span>*scale*mirror)</span><br><span class="line"> <span class="keyword">if</span> mirror:</span><br><span class="line">	 t.rt(<span class="number">90</span>)</span><br><span class="line"> <span class="keyword">else</span>:</span><br><span class="line">	 t.rt(<span class="number">90</span> + <span class="number">180</span> * mirror)</span><br><span class="line"></span><br><span class="line"> t.fd(<span class="number">95</span>*scale)</span><br><span class="line"> t.pd()</span><br><span class="line"></span><br><span class="line">t.fillcolor(<span class="string">&quot;#580000&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.circle(<span class="number">40</span>*scale*mirror)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.up()</span><br></pre></td></tr></table></figure></div>

<ul>
<li><p>其他图类似 … 共完成5个函数引用文件</p>
</li>
<li><p>效果图如下：</p>
</li>
</ul>
<img lazyload src="/images/loading.svg" data-src="/2022/11/18/Practice-plane-composition/0221593ffb0ea73e6b067288c10ca75.png" class title="This is an roman image">

<h3 id="制作Main程序："><a href="#制作Main程序：" class="headerlink" title="制作Main程序："></a>制作Main程序：</h3><ul>
<li>建立Constants,并导入五个图形函数文件：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">t = turtle</span><br><span class="line"></span><br><span class="line">t.hideturtle()</span><br><span class="line">turtle.bgcolor(<span class="string">&quot;#FF6021&quot;</span>)</span><br><span class="line">t.speed(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">import</span> pattern_t</span><br><span class="line"><span class="keyword">import</span> pattern_l</span><br><span class="line"><span class="keyword">import</span> pattern_m</span><br><span class="line"><span class="keyword">import</span> pattern_p</span><br><span class="line"><span class="keyword">import</span> pattern_s</span><br></pre></td></tr></table></figure></div>

<ul>
<li>定义quilt函数，并创建函数变量：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">quilt</span>(<span class="params">scale, col, row, width,height,border, t</span>):</span><br><span class="line">    width = width</span><br><span class="line">    height = height</span><br><span class="line">    t.setup(width, height)</span><br></pre></td></tr></table></figure></div>

<ul>
<li>将每一个小图形的 “轴心&#x2F;起点” 调到左下角：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">startx = -width * <span class="number">.5</span> +border</span><br><span class="line">starty = -height * <span class="number">.5</span> +border</span><br></pre></td></tr></table></figure></div>

<ul>
<li>重点！！通过for循环，创建横向与纵向的复制，并创建”row”与”col”的变量来控制图像的数量</li>
<li>并通过num &#x3D; (i + j) %5 公式，让 0，1，2，3，4 依次横竖排列</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, row):</span><br><span class="line">    curr_y = starty + i * width/<span class="number">5.</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, col):</span><br><span class="line">        curr_x = startx + j * height/<span class="number">5.</span></span><br><span class="line">        t.pu()</span><br><span class="line">        t.setpos(curr_x, curr_y)</span><br><span class="line">        t.pd()</span><br><span class="line">        num = (i + j) % <span class="number">5</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>最后通过if判定，替换为图形函数：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (num == <span class="number">0</span>):</span><br><span class="line">	 pattern_t.t_word(t, curr_x, curr_y,scale)</span><br><span class="line"> <span class="keyword">if</span> (num == <span class="number">1</span>):</span><br><span class="line">	 pattern_p.p_word(t, curr_x, curr_y,scale)</span><br><span class="line"> <span class="keyword">if</span> (num == <span class="number">2</span>):</span><br><span class="line"> 	pattern_l.l_word(t, curr_x, curr_y,scale)</span><br><span class="line"> <span class="keyword">if</span> (num == <span class="number">3</span>):</span><br><span class="line">	 pattern_s.s_word(t, curr_x, curr_y,scale)</span><br><span class="line"> <span class="keyword">if</span> (num == <span class="number">4</span>):</span><br><span class="line">  pattern_m.m_word(t, curr_x, curr_y,scale)</span><br></pre></td></tr></table></figure></div>

<ul>
<li>搞定！</li>
</ul>
<h3 id="易错点反思："><a href="#易错点反思：" class="headerlink" title="易错点反思："></a>易错点反思：</h3><ol>
<li>首先，源代码制作慢，总是忘记添加函数变量，这也导致后期合成的时候，无法在main代码中控制图形的大小，导致回炉重造。</li>
<li>其次，我没有在一开始就设计程序的大框架，而是盲目的一个一个去绘制图形，到最后想到要开始制作main程序的时候，发现所有文件都很独立，工程很大，最后不得不一个一个反攻修改。</li>
<li>我不能理解很多变量之间的操作和结果，所以我不断出错。最后，我使用了我能理解的if函数，在尝试中完成了我的工作。</li>
</ol>
<h5 id="错误展示："><a href="#错误展示：" class="headerlink" title="错误展示："></a><strong>错误展示：</strong></h5><img lazyload src="/images/loading.svg" data-src="/2022/11/18/Practice-plane-composition/%E5%9B%BE%E7%89%871.png" class title="This is an roman image">



<h2 id="另附杂七杂八临摹练习图："><a href="#另附杂七杂八临摹练习图：" class="headerlink" title="另附杂七杂八临摹练习图："></a>另附杂七杂八临摹练习图：</h2><img lazyload src="/images/loading.svg" data-src="/2022/11/18/Practice-plane-composition/%E5%9B%BE%E7%89%872.png" class title="This is an roman image">















]]></content>
      <categories>
        <category>作品集</category>
        <category>程序向</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>个人作品</tag>
        <tag>Python</tag>
        <tag>程序向</tag>
      </tags>
  </entry>
  <entry>
    <title>作品：用Python创建飓风模拟器</title>
    <url>/2022/12/20/HurricaneStarter/</url>
    <content><![CDATA[<h2 id="Completed-Image："><a href="#Completed-Image：" class="headerlink" title="Completed Image："></a>Completed Image：</h2><img lazyload src="/images/loading.svg" data-src="/2022/12/20/HurricaneStarter/code01.gif" class title="This is an hurricane image">

<img lazyload src="/images/loading.svg" data-src="/2022/12/20/HurricaneStarter/code02.gif" class title="This is an hurricane image">



<h2 id="Introduction："><a href="#Introduction：" class="headerlink" title="Introduction："></a>Introduction：</h2><p>《飓风模拟器》，是在学校所修的代码课程中的一项作业，选自Nifty Assignments 2018 -斯坦福计算机科学SIGCSE。</p>
<p>作业要求：您将编写代码，使飓风沿着其轨迹移动，同时在地图上标记每个点的风暴类别。至少，你的代码应该显示一个提供的飓风路径，着色和改变线的厚度适当的类别，以不同的速度移动海龟适当的风速(速度)，并打印类别的值为每个数据点的适当颜色。</p>
<p>额外学分: 1.展示课堂教学之外的个人研究. 2.创建从可能的飓风文件列表中选择的能力。3.为用户提供选择所有飓风并同时在一个窗口中绘制它们的能力(绘制重叠).</p>
<p>超额完成作业，虽作品依旧相对粗糙，但也是在技术上成长的过程，因此记录下来，作为经验。</p>
<h2 id="Design-thinking"><a href="#Design-thinking" class="headerlink" title="Design thinking:"></a>Design thinking:</h2><h3 id="背景与启动函数制作"><a href="#背景与启动函数制作" class="headerlink" title="背景与启动函数制作"></a>背景与启动函数制作</h3><ul>
<li>首先以turtle库为基本库绘制图像：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle </span><br></pre></td></tr></table></figure></div>

<ul>
<li>创建启动函数，包括创建一个turtle对象和一个屏幕对象，设置坐标系统以匹配经纬度，并显示地图的背景图像。</li>
<li>该函数返回一个元组，其中包含turtle对象、屏幕对象和地图背景图像。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hurricane_setup</span>():</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">import</span> tkinter</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set size of window to size of map</span></span><br><span class="line">    turtle.setup(<span class="number">965</span>, <span class="number">600</span>)</span><br><span class="line"></span><br><span class="line">    wn = turtle.Screen()</span><br><span class="line">    wn.title(<span class="string">&quot;Hurricane Tracker&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># kludge to get the map shown as a background image,</span></span><br><span class="line">    <span class="comment"># since wn.bgpic does not allow you to position the image</span></span><br><span class="line">    canvas = wn.getcanvas()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set the coordinate system to match lat/long</span></span><br><span class="line">    <span class="comment"># DRF - parameters are llx lly urx ury (lower left and upper right)</span></span><br><span class="line">    turtle.setworldcoordinates(-<span class="number">90</span>, <span class="number">0</span>, -<span class="number">17.66</span>, <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># DRF - Windows only supports gif, pgm, ppm unless you use the PIL library</span></span><br><span class="line">    map_bg_img = tkinter.PhotoImage(file=<span class="string">&quot;images/atlantic-basin.gif&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># additional kludge for positioning the background image</span></span><br><span class="line">    <span class="comment"># when setworldcoordinates is used</span></span><br><span class="line">    canvas.create_image(-<span class="number">1175</span>, -<span class="number">580</span>, anchor=tkinter.NW, image=map_bg_img)</span><br><span class="line"></span><br><span class="line">    t = turtle.Turtle()</span><br><span class="line">    wn.register_shape(<span class="string">&quot;images/hurricane.gif&quot;</span>)</span><br><span class="line">    t.shape(<span class="string">&quot;images/hurricane.gif&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (t, wn, map_bg_img)</span><br></pre></td></tr></table></figure></div>

<ul>
<li>定义飓风函数，首先开启地图</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hurricane</span>():</span><br><span class="line">    (t, wn, map_bg_img) = hurricane_setup()</span><br></pre></td></tr></table></figure></div>



<h3 id="列表读取与设定"><a href="#列表读取与设定" class="headerlink" title="列表读取与设定"></a>列表读取与设定</h3><ul>
<li><p>定义了一个包含了五个数据文件的列表 files</p>
</li>
<li><p>然后，使用while 循环，让用户选择一个数据文件进行处理</p>
</li>
<li><p>当用户输入选择的文件编号后，代码将读取该文件中的数据并存储到一个名为 data 的列表中</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数据文件</span></span><br><span class="line">files = [<span class="string">&#x27;newdata/florence2018.csv&#x27;</span>, <span class="string">&#x27;newdata/dorian2019.csv&#x27;</span>, <span class="string">&#x27;newdata/irma2017.csv&#x27;</span>, <span class="string">&#x27;newdata/jose2017.csv&#x27;</span>, <span class="string">&#x27;newdata/michael2018.csv&#x27;</span>]</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(files)):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;x + <span class="number">1</span>&#125;</span>) <span class="subst">&#123;files[x][<span class="number">8</span>:]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    file_number =<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;Which file do you want to play? please enter a number(1 to 5):&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= file_number - <span class="number">1</span> &lt; <span class="built_in">len</span>(files):</span><br><span class="line">        data = []</span><br></pre></td></tr></table></figure></div>



<ul>
<li>使用“with open（file）as f：”语法，它可以自动关闭文件，从而避免了因为忘记关闭文件而导致的错误</li>
<li>使用 ”f.readlines()“ 函数将文件内容逐行读取到一个列表 f_csv 中</li>
<li>接着，使用一个 for 循环遍历 f_csv 中的每一行，并用 “enumerate()” 函数获取并定义行和高</li>
<li>最后跳过第一行（名称）</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">file = files[file_number-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Roger that...wait please&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file) <span class="keyword">as</span> f:</span><br><span class="line">    f_csv = f.readlines()</span><br><span class="line"></span><br><span class="line"><span class="comment"># set line and column</span></span><br><span class="line">    <span class="keyword">for</span> i, column <span class="keyword">in</span> <span class="built_in">enumerate</span>(f_csv):</span><br><span class="line">        <span class="comment"># use the enumerate function can get all the line number(enumerate = line number)</span></span><br><span class="line">        <span class="comment"># i = line number(the first variable)</span></span><br><span class="line">        <span class="comment"># skip headline:</span></span><br><span class="line">        column = column.split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure></div>

<h3 id="建立函数内新列表"><a href="#建立函数内新列表" class="headerlink" title="建立函数内新列表"></a>建立函数内新列表</h3><ul>
<li>将需要用到的数据，进行整理，并合成一个新的列表</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set position,wind_speed,category:</span></span><br><span class="line"><span class="comment"># coordinates =(Lon, Lat)</span></span><br><span class="line">position = <span class="built_in">float</span>(column[<span class="number">3</span>]), <span class="built_in">float</span>(column[<span class="number">2</span>])</span><br><span class="line">category = column[-<span class="number">1</span>][:-<span class="number">1</span>]</span><br><span class="line">wind_speed = column[<span class="number">4</span>][:-<span class="number">3</span>]</span><br><span class="line"><span class="comment"># group a new data(csv)</span></span><br><span class="line">data.append([position, category, wind_speed])</span><br></pre></td></tr></table></figure></div>



<h3 id="设置绘图判定"><a href="#设置绘图判定" class="headerlink" title="设置绘图判定"></a>设置绘图判定</h3><ul>
<li>使用for循环进行判定，根据数据调节颜色、宽度、速度等</li>
<li></li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">                position = data[i][<span class="number">0</span>]</span><br><span class="line">                category = data[i][<span class="number">1</span>]</span><br><span class="line">                wind_speed = data[i][<span class="number">2</span>]</span><br><span class="line">                t.speed(<span class="number">10</span> - (<span class="built_in">float</span>(wind_speed) * (<span class="number">2</span> / <span class="number">37</span>)))</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> category == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">                    t.color(<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">                    t.pensize(<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">elif</span> category == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                    t.color(<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">                    t.pensize(<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">elif</span> category == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                    t.color(<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">                    t.pensize(<span class="number">4</span>)</span><br><span class="line">                <span class="keyword">elif</span> category == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                    t.color(<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">                    t.pensize(<span class="number">6</span>)</span><br><span class="line">                <span class="keyword">elif</span> category == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                    t.color(<span class="string">&#x27;orange&#x27;</span>)</span><br><span class="line">                    t.pensize(<span class="number">8</span>)</span><br><span class="line">                <span class="keyword">elif</span> category == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">                    t.color(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">                    t.pensize(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> category != <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">                    t.write(data[i][<span class="number">1</span>], font=(<span class="string">&quot;Arial&quot;</span>, <span class="number">10</span>, <span class="string">&quot;normal&quot;</span>))</span><br><span class="line">                t.goto(position)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                    t.pd()</span><br><span class="line">            t.pu()</span><br></pre></td></tr></table></figure></div>

<ul>
<li>通过判定，用户输入值在正确范围内的，进行绘制；输入0，为退出；输入其他错误，则会提示重新修改！</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">        <span class="keyword">elif</span> -<span class="number">1</span> &gt; file_number-<span class="number">1</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Sorry,Invalid file number...&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Please try again...&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> file_number - <span class="number">1</span> &gt;= <span class="built_in">len</span>(files):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Wrong! Wrong! Wrong!&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Try again!&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> file_number == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Bye~&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">	hurricane()</span><br><span class="line">	</span><br><span class="line">main()</span><br></pre></td></tr></table></figure></div>

<ul>
<li>完成！</li>
</ul>
<h4 id="输入值截图："><a href="#输入值截图：" class="headerlink" title="输入值截图："></a>输入值截图：</h4><img lazyload src="/images/loading.svg" data-src="/2022/12/20/HurricaneStarter/01.jpg" class title="This is an hurricane image"> 

<img lazyload src="/images/loading.svg" data-src="/2022/12/20/HurricaneStarter/02.jpg" class title="This is an hurricane image">



<h3 id="易错点反思："><a href="#易错点反思：" class="headerlink" title="易错点反思："></a>易错点反思：</h3><ol>
<li>很多新的语法还不够熟练，经常想不起来用，这也导致很多时候代码写不下去。</li>
<li>学会了使用AI进行询问新函数和语法的使用。</li>
</ol>
<h5 id="错误展示："><a href="#错误展示：" class="headerlink" title="错误展示："></a><strong>错误展示：</strong></h5><img lazyload src="/images/loading.svg" data-src="/2022/12/20/HurricaneStarter/%E5%9B%BE%E7%89%871.jpg" class title="This is an hurricane image">

<img lazyload src="/images/loading.svg" data-src="/2022/12/20/HurricaneStarter/%E5%9B%BE%E7%89%872.jpg" class title="This is an hurricane image">









]]></content>
      <categories>
        <category>作品集</category>
        <category>程序向</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>个人作品</tag>
        <tag>Python</tag>
        <tag>程序向</tag>
        <tag>模拟</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>作品：用Python创建Maya重命名工具</title>
    <url>/2023/02/01/rename-maya-tool/</url>
    <content><![CDATA[<h2 id="Completed-Image："><a href="#Completed-Image：" class="headerlink" title="Completed Image："></a>Completed Image：</h2><img lazyload src="/images/loading.svg" data-src="/2023/02/01/rename-maya-tool/tree01.gif" class title="This is an hurricane image">

<img lazyload src="/images/loading.svg" data-src="/2023/02/01/rename-maya-tool/rename-tool.jpg" class title="This is an hurricane image">




<h2 id="Introduction："><a href="#Introduction：" class="headerlink" title="Introduction："></a>Introduction：</h2><p>《Maya重命名工具》，是我在22年在腾讯天美工作室实习的时候，最常见也最实用的一个工具，这也是我认为逻辑清晰，也非常容易制作的工具。特别是在辅助程序组进行批量创建模型，测试性能的时候，自己创建一个这样的工具，真的能提高太多的效率了。</p>
<p>不过22年我还不熟悉python，只会在UE5中使用widget工具，用库里已经存在的函数节点来连接，虽然也很方便，但是也会受到很多的限制。</p>
<h5 id="UE5-Widget工具展示："><a href="#UE5-Widget工具展示：" class="headerlink" title="UE5-Widget工具展示："></a>UE5-Widget工具展示：</h5><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/649/132/small/shuhang-luan-tool01.jpg?1676860570" alt="img" style="zoom:50%;">



<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/649/133/small/shuhang-luan-tool02.jpg?1676860572" alt="img"></p>
<p>因此在我开始练习python工具制作后，我就想起了曾经的“挚爱”。</p>
<p>那么，开干！</p>
<h2 id="Design-thinking"><a href="#Design-thinking" class="headerlink" title="Design thinking:"></a>Design thinking:</h2><h3 id="建立窗口"><a href="#建立窗口" class="headerlink" title="建立窗口"></a>建立窗口</h3><ul>
<li>创建后缀字典：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">SUFFIXES = &#123;</span><br><span class="line">    <span class="string">&quot;mesh&quot;</span>: <span class="string">&quot;GEO&quot;</span>,</span><br><span class="line">    <span class="string">&quot;joint&quot;</span>: <span class="string">&quot;JNT&quot;</span>,</span><br><span class="line">    <span class="string">&quot;camera&quot;</span>: <span class="string">&quot;CAM&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ambientLight&quot;</span>: <span class="string">&quot;LGT&quot;</span>,</span><br><span class="line">    <span class="string">&quot;directionalLight&quot;</span>: <span class="string">&quot;LGT&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pointLight&quot;</span>: <span class="string">&quot;LGT&quot;</span>,</span><br><span class="line">    <span class="string">&quot;spotLight&quot;</span>: <span class="string">&quot;LGT&quot;</span>,</span><br></pre></td></tr></table></figure></div>

<ul>
<li>创建类，设定窗口名称</li>
<li>Tips：创建类的目的是把相关的代码封装在一起，并提供可重复使用的接口和工具，方便管理和维护代码。在这个例子中，RenamerUi 类的目的是创建 Maya 的批量重命名工具的用户界面。使用类可以把 UI 元素封装在一起，并在需要时方便地创建、显示、删除等。</li>
<li>在创建窗口前，先删去之前的同名窗口</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RenamerUi</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    WINDOW_NAME = <span class="string">&quot;BatchNamingUi&quot;</span></span><br><span class="line">    APP_NAME = <span class="string">&quot;Batch naming&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">display</span>(<span class="params">cls</span>):</span><br><span class="line">        cls.delete()</span><br></pre></td></tr></table></figure></div>

<ul>
<li>建立窗口并命名</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立窗口</span></span><br><span class="line">    <span class="comment"># 主主控件</span></span><br><span class="line">    main_window = cmds.window(cls.WINDOW_NAME, title=<span class="string">&quot;Batch Renamer&quot;</span>, sizeable=<span class="literal">True</span>, menuBar=<span class="literal">True</span>)</span><br><span class="line">    main_layout = cmds.columnLayout(adjustableColumn=<span class="literal">True</span>, parent=main_window)</span><br><span class="line"></span><br><span class="line">   </span><br></pre></td></tr></table></figure></div>



<h3 id="UI界面"><a href="#UI界面" class="headerlink" title="UI界面"></a>UI界面</h3><h4 id="主控件"><a href="#主控件" class="headerlink" title="主控件"></a>主控件</h4><ul>
<li>设置界面内的主控件，并依附于窗口</li>
<li>创建UI：选择方法</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 选择界面</span></span><br><span class="line">method_layout = cmds.formLayout(parent=main_layout)</span><br><span class="line"></span><br><span class="line">cls.method = cmds.radioButtonGrp(numberOfRadioButtons=<span class="number">2</span>,</span><br><span class="line">                                 label=<span class="string">&quot;Method: &quot;</span>,</span><br><span class="line">                                 columnWidth=(<span class="number">1</span>, <span class="number">75</span>),</span><br><span class="line">                                 h=<span class="number">27</span>,</span><br><span class="line">                                 w=<span class="number">512</span>,</span><br><span class="line">                                 sl=<span class="number">1</span>,</span><br><span class="line">                                 labelArray2=(<span class="string">&quot;Selected&quot;</span>,<span class="string">&quot;Hierarchy&quot;</span>),</span><br><span class="line">                                 parent=method_layout)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>



<h4 id="UI-重命名"><a href="#UI-重命名" class="headerlink" title="UI- 重命名"></a>UI- 重命名</h4><h5 id="子控件与输入窗口"><a href="#子控件与输入窗口" class="headerlink" title="子控件与输入窗口"></a>子控件与输入窗口</h5><ul>
<li><p>“Rename”窗口不需要输入值，因此使用<code>cmds.frameLayout()</code>命令创建栏目，并使用bgs&#x3D;True添加颜色</p>
</li>
<li><p>使用<code>cmds.textFieldGrp(）</code>命令创建帧布局窗口小部件，返回的值为字符串</p>
</li>
<li><p>使用<code>columnWidth1/2=</code>命令控制标签和帧布局窗口的宽度</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 名称窗口</span></span><br><span class="line">rename_layout = cmds.frameLayout(label=<span class="string">&quot;Rename&quot;</span>, parent=main_layout, bgs=<span class="literal">True</span></span><br><span class="line">rename_form_layout = cmds.formLayout(parent=rename_layout, h=<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#cw1:将name向右移动一段位置（增加空格）cw2:控制输入文本位置</span></span><br><span class="line">cls.name_tfg = cmds.textFieldGrp(label=<span class="string">&quot;Name: &quot;</span>,</span><br><span class="line">                                 columnWidth=(<span class="number">1</span>, <span class="number">75</span>),</span><br><span class="line">                                 columnWidth2=(<span class="number">2</span>, <span class="number">426</span>),</span><br><span class="line">                                 editable=<span class="literal">True</span>,</span><br><span class="line">                                 parent=rename_form_layout)</span><br><span class="line"></span><br><span class="line">cls.prefix_tfg = cmds.textFieldGrp(label=<span class="string">&quot;Prefix: &quot;</span>,</span><br><span class="line">                                   columnWidth=(<span class="number">1</span>, <span class="number">75</span>),</span><br><span class="line">                                   columnWidth2=(<span class="number">2</span>, <span class="number">426</span>),</span><br><span class="line">                                   editable=<span class="literal">True</span>,</span><br><span class="line">                                   parent=rename_form_layout)</span><br><span class="line"></span><br><span class="line">cls.suffix_tfg = cmds.textFieldGrp(label=<span class="string">&quot;Suffix: &quot;</span>,</span><br><span class="line">                                   columnWidth=(<span class="number">1</span>, <span class="number">40</span>),</span><br><span class="line">                                   columnWidth2=(<span class="number">2</span>, <span class="number">80</span>),</span><br><span class="line">                                   editable=<span class="literal">True</span>,</span><br><span class="line">                                   parent=rename_form_layout)</span><br><span class="line"></span><br><span class="line">cls.autoSuffix_cbg = cmds.checkBoxGrp(numberOfCheckBoxes=<span class="number">1</span>,</span><br><span class="line">                                      label=<span class="string">&quot;Auto Suffix: &quot;</span>,</span><br><span class="line">                                      columnWidth=(<span class="number">1</span>, <span class="number">70</span>),</span><br><span class="line">                                      io=<span class="literal">False</span>,</span><br><span class="line">                                      changeCommand=cls.toggleSuffixField,</span><br><span class="line">                                      parent=rename_form_layout)</span><br><span class="line"><span class="comment"># 设定后缀-数字位数</span></span><br><span class="line"><span class="comment"># 创建标签</span></span><br><span class="line">padding_label = cmds.text(<span class="string">&quot;Padding: &quot;</span>, align=<span class="string">&quot;right&quot;</span>, width=<span class="number">60</span>, parent=rename_form_layout)</span><br><span class="line">   </span><br></pre></td></tr></table></figure></div>

<ul>
<li>读取整数字段，控制后缀名的数值位数</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">cls.padding = cmds.intField(width=<span class="number">50</span>,</span><br><span class="line">                            value=<span class="number">1</span>,</span><br><span class="line">                            minValue=<span class="number">1</span>,</span><br><span class="line">                            maxValue=<span class="number">6</span>,</span><br><span class="line">                            step=<span class="number">1</span>,</span><br><span class="line">                            parent=rename_form_layout)</span><br></pre></td></tr></table></figure></div>



<h5 id="布局排版"><a href="#布局排版" class="headerlink" title="布局排版"></a>布局排版</h5><ul>
<li>使用<code>cmds.formLayout（）</code>命令，控制各控件进行排版</li>
<li>例如：<code>ac=(cls.autoSuffix_cbg, &quot;left&quot;, 0, cls.suffix_tfg)</code> 表示将 <code>autoSuffix_cbg</code> 这个控件的左侧对齐到 <code>suffix_tfg</code> 这个控件的右侧，并且二者之间没有空白区域</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, af=(cls.name_tfg, <span class="string">&quot;top&quot;</span>, <span class="number">6</span>))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, af=(cls.name_tfg, <span class="string">&quot;left&quot;</span>, <span class="number">0</span>))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, ac=(cls.prefix_tfg, <span class="string">&quot;top&quot;</span>, <span class="number">3</span>, cls.name_tfg))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, ac=(cls.suffix_tfg, <span class="string">&quot;top&quot;</span>, <span class="number">3</span>, cls.name_tfg))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, ac=(cls.suffix_tfg, <span class="string">&quot;left&quot;</span>, <span class="number">0</span>, cls.prefix_tfg))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, ac=(cls.autoSuffix_cbg, <span class="string">&quot;top&quot;</span>, <span class="number">6</span>, cls.name_tfg))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, ac=(cls.autoSuffix_cbg, <span class="string">&quot;left&quot;</span>, <span class="number">0</span>, cls.suffix_tfg))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, ac=(padding_label, <span class="string">&quot;top&quot;</span>, <span class="number">6</span>, cls.name_tfg))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, ac=(padding_label, <span class="string">&quot;left&quot;</span>, <span class="number">0</span>, cls.autoSuffix_cbg))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, ac=(cls.padding, <span class="string">&quot;top&quot;</span>, <span class="number">3</span>, cls.name_tfg))</span><br><span class="line">   cmds.formLayout(rename_form_layout, e=<span class="literal">True</span>, ac=(cls.padding, <span class="string">&quot;left&quot;</span>, <span class="number">0</span>, padding_label))</span><br></pre></td></tr></table></figure></div>



<h4 id="UI-搜索和替换"><a href="#UI-搜索和替换" class="headerlink" title="UI- 搜索和替换"></a>UI- 搜索和替换</h4><ul>
<li>使用相同方法创建搜索和替换的UI界面，在此不多赘述…</li>
<li>最后加入<code>cmds.showWindow(main_window)</code>打开窗口</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Search and Replace UI</span></span><br><span class="line">replace_layout = cmds.frameLayout(label=<span class="string">&quot;Search and Replace&quot;</span>, parent=main_layout, bgs=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">replace_form_layout = cmds.formLayout(parent=replace_layout, h=<span class="number">65</span>)</span><br><span class="line"></span><br><span class="line">cls.searchFor_tfg = cmds.textFieldGrp(label=<span class="string">&quot;Search For: &quot;</span>,</span><br><span class="line">                                      columnWidth=(<span class="number">1</span>, <span class="number">75</span>),</span><br><span class="line">                                      columnWidth2=(<span class="number">2</span>, <span class="number">426</span>),</span><br><span class="line">                                      editable=<span class="literal">True</span>,</span><br><span class="line">                                      parent=replace_form_layout)</span><br><span class="line"></span><br><span class="line">cls.replaceWith_tfg = cmds.textFieldGrp(label=<span class="string">&quot;Replace With: &quot;</span>,</span><br><span class="line">                                        columnWidth=(<span class="number">1</span>, <span class="number">75</span>),</span><br><span class="line">                                        columnWidth2=(<span class="number">2</span>, <span class="number">426</span>),</span><br><span class="line">                                        editable=<span class="literal">True</span>,</span><br><span class="line">                                        parent=replace_form_layout)</span><br><span class="line"></span><br><span class="line">cmds.formLayout(replace_form_layout, e=<span class="literal">True</span>, af=(cls.searchFor_tfg, <span class="string">&quot;top&quot;</span>, <span class="number">6</span>))</span><br><span class="line">cmds.formLayout(replace_form_layout, e=<span class="literal">True</span>, af=(cls.searchFor_tfg, <span class="string">&quot;left&quot;</span>, <span class="number">0</span>))</span><br><span class="line">cmds.formLayout(replace_form_layout, e=<span class="literal">True</span>, ac=(cls.replaceWith_tfg, <span class="string">&quot;top&quot;</span>, <span class="number">3</span>, cls.searchFor_tfg))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Buttons UI</span></span><br><span class="line">button_layout = cmds.flowLayout(parent=main_layout)</span><br><span class="line">rename_btn = cmds.button(label=<span class="string">&quot;Rename&quot;</span>,</span><br><span class="line">                         width=<span class="number">170</span>,</span><br><span class="line">                         height=<span class="number">28</span>,</span><br><span class="line">                         command=<span class="string">&quot;batchRenamerUi.rename_objects()&quot;</span>,</span><br><span class="line">                         parent=button_layout)</span><br><span class="line"></span><br><span class="line">replace_btn = cmds.button(label=<span class="string">&quot;Replace&quot;</span>,</span><br><span class="line">                          width=<span class="number">170</span>,</span><br><span class="line">                          height=<span class="number">28</span>,</span><br><span class="line">                          command=<span class="string">&quot;batchRenamerUi.replace_objects()&quot;</span>,</span><br><span class="line">                          parent=button_layout)</span><br><span class="line"></span><br><span class="line">replace_btn = cmds.button(label=<span class="string">&quot;Cancel&quot;</span>,</span><br><span class="line">                          width=<span class="number">170</span>,</span><br><span class="line">                          height=<span class="number">28</span>,</span><br><span class="line">                          command=<span class="string">&quot;batchRenamerUi.delete()&quot;</span>,</span><br><span class="line">                          parent=button_layout)</span><br><span class="line"></span><br><span class="line">cmds.window(main_window, e=<span class="literal">True</span>, w=<span class="number">200</span>, h=<span class="number">150</span>)</span><br><span class="line">cmds.window(main_window, e=<span class="literal">True</span>, sizeable=<span class="literal">True</span>)</span><br><span class="line">cmds.window(main_window, e=<span class="literal">True</span>, rtf=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">cmds.showWindow(main_window)</span><br></pre></td></tr></table></figure></div>



<h3 id="重命名函数"><a href="#重命名函数" class="headerlink" title="重命名函数"></a>重命名函数</h3><h4 id="退出设定"><a href="#退出设定" class="headerlink" title="退出设定"></a>退出设定</h4><ul>
<li>如果关闭窗口，则退出UI界面</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params">cls</span>):</span><br><span class="line">    <span class="keyword">if</span> cmds.window(cls.WINDOW_NAME, exists=<span class="literal">True</span>):</span><br><span class="line">        cmds.deleteUI(cls.WINDOW_NAME, window=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div>

<h4 id="自动后缀设定"><a href="#自动后缀设定" class="headerlink" title="自动后缀设定"></a>自动后缀设定</h4><ul>
<li>如果自动后缀功能开启，则无法使用后缀重命名</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">@classmethod</span><br><span class="line">def toggleSuffixField(cls, value):</span><br><span class="line">    if value:</span><br><span class="line">        cmds.textFieldGrp(cls.suffix_tfg, e=1, en=0)</span><br><span class="line">    else:</span><br><span class="line">        cmds.textFieldGrp(cls.suffix_tfg, e=1, en=1)</span><br></pre></td></tr></table></figure></div>



<h4 id="重命名函数-1"><a href="#重命名函数-1" class="headerlink" title="重命名函数"></a>重命名函数</h4><h5 id="获取值"><a href="#获取值" class="headerlink" title="获取值"></a>获取值</h5><ul>
<li>获取UI中所有的值，并保存到相应变量</li>
<li>定义appending中的counter初始值为1，以作后用</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rename_objects</span>(<span class="params">cls</span>):</span><br><span class="line"></span><br><span class="line">    rename_data = cmds.textFieldGrp(cls.name_tfg, query=<span class="literal">True</span>, text=<span class="literal">True</span>)</span><br><span class="line">    prefix_data = cmds.textFieldGrp(cls.prefix_tfg, query=<span class="literal">True</span>, text=<span class="literal">True</span>)</span><br><span class="line">    padding_data = cmds.intField(cls.padding, query=<span class="literal">True</span>, value=<span class="literal">True</span>)</span><br><span class="line">    hierarchy_data = cmds.radioButtonGrp(cls.method, query=<span class="literal">True</span>, select=<span class="literal">True</span>)</span><br><span class="line">    counter = <span class="number">1</span></span><br></pre></td></tr></table></figure></div>



<h5 id="方法判定"><a href="#方法判定" class="headerlink" title="方法判定"></a>方法判定</h5><ul>
<li>判定选择方法，如果 hierarchy_data &#x3D; 2，则代表选择了第二个选项，代表选择了hierarchy</li>
<li>如果用户选择了hierarchy，则使用<code>cmds.listRelatives()</code>获取所有后代物体，并选中（很好用！）</li>
<li>若选择的是select，则只选择场景中选中的模型</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> hierarchy_data == <span class="number">2</span>:</span><br><span class="line">    sel = cmds.ls(sl=<span class="literal">True</span>, tr=<span class="literal">True</span>)</span><br><span class="line">    children = cmds.listRelatives(sel, ad=<span class="literal">True</span>, <span class="built_in">type</span>=<span class="string">&#x27;transform&#x27;</span>)</span><br><span class="line">    cmds.select(children, add=<span class="literal">True</span>)</span><br><span class="line">    sel = cmds.ls(sl=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    sel = cmds.ls(sl=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div>



<h5 id="获取后缀"><a href="#获取后缀" class="headerlink" title="获取后缀"></a>获取后缀</h5><ul>
<li>错误判定，若未选择模型，则提示报错</li>
<li>检查box里是否选择了自动后缀，若无，则获取用户输入的后缀信息</li>
<li>若有，则获取层级下的所有子对象的type，并对照字典一一赋予</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sel) &lt; <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;Please select at least one object to rename&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> sel:</span><br><span class="line">        <span class="keyword">if</span> cmds.checkBoxGrp(cls.autoSuffix_cbg, query=<span class="literal">True</span>, value1=<span class="literal">True</span>):</span><br><span class="line">            objType = cmds.objectType(obj)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> objType == <span class="string">&quot;transform&quot;</span>:</span><br><span class="line">                children = cmds.listRelatives(obj, children=<span class="literal">True</span>, ni=<span class="literal">True</span>)[<span class="number">0</span>]</span><br><span class="line">                objType = cmds.objectType(children)</span><br><span class="line">            suffix_data = <span class="string">&quot;_&quot;</span> + SUFFIXES.get(objType, DEFAULT_SUFFIX)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            suffix_data = cmds.textFieldGrp(cls.suffix_tfg, query=<span class="literal">True</span>, text=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">      </span><br></pre></td></tr></table></figure></div>



<h5 id="重命名："><a href="#重命名：" class="headerlink" title="重命名："></a>重命名：</h5><ul>
<li><code>&quot;&#123;0&#125;&#123;1&#125;&#123;2&#125;&#123;3&#125;&quot;.format(prefix_data, rename_data, str(counter).zfill(padding_data), suffix_data</code>中的<code>&quot;&#123;0&#125;&#123;1&#125;&#123;2&#125;&#123;3&#125;&quot;.</code>表示将后方的4个数值合并为一个新的字符串</li>
<li>每复制一个物体，计数器增加1</li>
<li>最后清除选择</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">  			cmds.rename(<span class="string">&quot;&#123;0&#125;&#123;1&#125;&#123;2&#125;&#123;3&#125;&quot;</span>.<span class="built_in">format</span>(prefix_data, rename_data, 			     						<span class="built_in">str</span>(counter).zfill(padding_data), suffix_data))</span><br><span class="line">       		counter+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出有多少模型被更改</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Renamed &#123;0&#125; Objects&quot;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(sel)))</span><br><span class="line">cmds.select(cl=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div>



<h4 id="搜索与替换函数："><a href="#搜索与替换函数：" class="headerlink" title="搜索与替换函数："></a>搜索与替换函数：</h4><h5 id="获取值-1"><a href="#获取值-1" class="headerlink" title="获取值"></a>获取值</h5><ul>
<li>定义搜索与替换函数</li>
<li>获取搜索、替换和方法值</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">replace_objects</span>(<span class="params">cls</span>):</span><br><span class="line"></span><br><span class="line">    searchFor_data = cmds.textFieldGrp(cls.searchFor_tfg, query=<span class="literal">True</span>, text=<span class="literal">True</span>)</span><br><span class="line">    replaceWith_data = cmds.textFieldGrp(cls.replaceWith_tfg, query=<span class="literal">True</span>, text=<span class="literal">True</span>)</span><br><span class="line">    hierarchy_data = cmds.radioButtonGrp(cls.method, query=<span class="literal">True</span>, select=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div>



<h5 id="判定与替换："><a href="#判定与替换：" class="headerlink" title="判定与替换："></a>判定与替换：</h5><ul>
<li>同上：获取所选模型，并保存到sel变量中（selection缩写）</li>
<li>使用str.replace命令，把新名称替换旧名称</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> hierarchy_data == <span class="number">2</span>:</span><br><span class="line">    sel = cmds.ls(sl=<span class="literal">True</span>, tr=<span class="literal">True</span>)</span><br><span class="line">    children = cmds.listRelatives(sel, ad=<span class="literal">True</span>, <span class="built_in">type</span>=<span class="string">&#x27;transform&#x27;</span>)</span><br><span class="line">    cmds.select(children, add=<span class="literal">True</span>)</span><br><span class="line">    sel = cmds.ls(sl=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    sel = cmds.ls(sl=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sel) &lt; <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;Please select at least one object to replace&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> searchFor_data == <span class="string">&quot;&quot;</span>:</span><br><span class="line">    <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;Please enter a name to search for&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> replaceWith_data == <span class="string">&quot;&quot;</span>:</span><br><span class="line">    <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;Please enter a name to replace with&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> sel:</span><br><span class="line">        <span class="keyword">if</span> searchFor_data <span class="keyword">in</span> i:</span><br><span class="line">            renamedString = i.replace(searchFor_data, replaceWith_data)</span><br><span class="line">            cmds.rename(i, renamedString)</span><br></pre></td></tr></table></figure></div>

<ul>
<li>！！！重点：<code>replace</code> 是 Python 字符串方法，用于替换字符串中的子字符串。注意！这只是在 Python 中修改了字符串，它并不会实际更改场景中物体的名称。因此，要更改场景中的物体名称，还是需要使用 <code>cmds.rename(oldname,newname)</code> 命令（血的教训！！！）</li>
</ul>
<h3 id="易错点反思："><a href="#易错点反思：" class="headerlink" title="易错点反思："></a>易错点反思：</h3><ol>
<li>很多新的语法还不够熟练，经常想不起来用，这也导致很多时候代码写不下去。</li>
<li>还是有一些bug存在，比如添加了“_”，但是不识别，目前只能手动添加。也许是命令不兼容，有时间了还需要继续研究解决。</li>
</ol>
<h4 id><a href="#" class="headerlink" title></a></h4>]]></content>
      <categories>
        <category>作品集</category>
        <category>程序向</category>
        <category>Python</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>个人作品</tag>
        <tag>Python</tag>
        <tag>程序向</tag>
        <tag>工具</tag>
        <tag>重命名</tag>
      </tags>
  </entry>
  <entry>
    <title>作品：《Lost corner》-Shader</title>
    <url>/2023/02/19/Shader/</url>
    <content><![CDATA[<h3 id="Video"><a href="#Video" class="headerlink" title="Video:"></a>Video:</h3><iframe width="900" height="500" src="https://www.youtube.com/embed/c_GezAnwtUo" title="Lost Corner" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>



<h3 id="Introduction："><a href="#Introduction：" class="headerlink" title="Introduction："></a>Introduction：</h3><p>《Lost Corner》，《遗失的角落》，是冬季学期的Game Shader项目作品。工程较大，较赶，在一个月内完成了模型、UV、材质全流程（SD+SP)、UE5- Shader、场景和灯光的全流程制作，因此整体质量受到了影响，我会在接下来的空余时间，继续深入优化贴图的细节。</p>
<h3 id="Pipeline："><a href="#Pipeline：" class="headerlink" title="Pipeline："></a>Pipeline：</h3><p>该作品主要由3dsmax、Maya、Substance Designer&#x2F;Painter、UE5完成。</p>
<h3 id="Highres-Screenshot："><a href="#Highres-Screenshot：" class="headerlink" title="Highres Screenshot："></a>Highres Screenshot：</h3><p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/650/000/large/shuhang-luan-l2-new-0362.jpg?1676863415" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/649/968/large/shuhang-luan-l2-old-0356.jpg?1676863286" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/650/013/large/shuhang-luan-l2-new-0760.jpg?1676863458" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/649/981/large/shuhang-luan-l2-old-0713.jpg?1676863342" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/650/003/large/shuhang-luan-l2-new-0155.jpg?1676863425" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/649/992/large/shuhang-luan-l2-old-0165.jpg?1676863391" alt="Lost Corner"></p>
<h4 id><a href="#" class="headerlink" title></a></h4><h3 id="Process"><a href="#Process" class="headerlink" title="Process:"></a>Process:</h3><p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/649/862/large/shuhang-luan-2.jpg?1676862857" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/649/864/large/shuhang-luan-3.jpg?1676862860" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/649/866/large/shuhang-luan-4.jpg?1676862862" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/649/867/large/shuhang-luan-5.jpg?1676862865" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/649/869/large/shuhang-luan-6.jpg?1676862867" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/649/871/large/shuhang-luan-7.jpg?1676862870" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/649/873/large/shuhang-luan-8.jpg?1676862873" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/649/874/large/shuhang-luan-9.jpg?1676862876" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/649/875/large/shuhang-luan-10.jpg?1676862880" alt="Lost Corner"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/649/877/large/shuhang-luan-11.jpg?1676862883" alt="Lost Corner"></p>
<h3 id="Achievement"><a href="#Achievement" class="headerlink" title="Achievement:"></a>Achievement:</h3><p>重点训练了Substance Designer中的程序化贴图制作，并生成大量可控的变量，以供Substance Painter中进行绘制，并着重训练了SP进入UE5中后的材质优化工作。</p>
<p>大大增强了自己对于节点式和程序化的逻辑思维能力，与同时进行的python练习作品结合，加深了对程序化和工具化的理解，更加坚定了对于技术美术方向的研究目标。</p>
<h3 id="Obsolete-Version"><a href="#Obsolete-Version" class="headerlink" title="Obsolete Version"></a>Obsolete Version</h3><ul>
<li><h5 id="废弃草稿："><a href="#废弃草稿：" class="headerlink" title="废弃草稿："></a>废弃草稿：</h5><iframe width="900" height="550" src="https://www.youtube.com/embed/42SLKtntxyM" title="Still — Obsolete version" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe></li>
</ul>
]]></content>
      <categories>
        <category>作品集</category>
        <category>美术向</category>
        <category>CG动画</category>
      </categories>
      <tags>
        <tag>个人作品</tag>
        <tag>3D动画</tag>
        <tag>CG</tag>
        <tag>团队作品</tag>
        <tag>Shader</tag>
      </tags>
  </entry>
  <entry>
    <title>作品：《MoJee》-Game</title>
    <url>/2022/04/11/MoJee-game/</url>
    <content><![CDATA[<h3 id="Video"><a href="#Video" class="headerlink" title="Video:"></a>Video:</h3><iframe width="900" height="450" src="https://www.youtube.com/embed/Yg9xIYjodgk?list=PLO9ob5u34jnvZMbMdvK5eQ1mXKMAc0Ruu" title="SAV WINTER GAME_ ShuhangLuan low voice" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<h3 id="Introduction："><a href="#Introduction：" class="headerlink" title="Introduction："></a>Introduction：</h3><p>《MoJee-Game》，是一个学校的Game pipeline课程项目作品，在2022.3月完成。制作周期仅为两个月，课程比较紧张，因此续弦了本科毕业设计的MoJee IP，制作出一个游戏世界。</p>
<h3 id="Main-Designer："><a href="#Main-Designer：" class="headerlink" title="Main Designer："></a>Main Designer：</h3><ol>
<li>进行了模型贴图的优化，并重定向游戏内骨骼配置。</li>
<li>完成了角色状态机的走跑跳，与连续攻击动作。</li>
<li>通过素材和特效制作，搭建两个较为完备的游戏关卡。</li>
<li>制作了大量的交互程序，比如关卡跳跃、人物攻击、怪物惊醒、追踪与死亡，血条和头像等UI界面、音效等等，通宵了无数个夜晚，解决了一个又一个bug，痛恨自己不是程序员出身。</li>
</ol>
<h3 id="Pipeline："><a href="#Pipeline：" class="headerlink" title="Pipeline："></a>Pipeline：</h3><p>该作品主要由3dsmax、Maya、Substance Designer&#x2F;Painter、UE5完成。</p>
<h3 id="Game-Screenshot："><a href="#Game-Screenshot：" class="headerlink" title="Game Screenshot："></a>Game Screenshot：</h3><h3 id><a href="#" class="headerlink" title></a><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/652/914/large/shuhang-luan-game02.jpg?1676873236" alt="MoJee -Game"></h3><p>​                                                     <img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/652/811/large/shuhang-luan-058f66a0d667cff6876232c8077f660-1.jpg?1676872951" alt="MoJee -Game" style="zoom: 50%;">                                                                                 </p>
<img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/652/826/large/shuhang-luan-f441f6dbf9af0813bd9596c261d72e2.jpg?1676872983" alt="MoJee -Game" style="zoom:50%;">

<img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/059/652/814/large/shuhang-luan-7352f6f02be2e93f59d44c92bab2c9c.jpg?1676872963" alt="MoJee -Game" style="zoom:50%;">



<img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/652/817/large/shuhang-luan-bf86316f6b70e9e3558e748b707ebe1.jpg?1676872970" alt="MoJee -Game">

<img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/652/815/large/shuhang-luan-7756a7adf96c3a282c39e5e32783c12.jpg?1676872966" alt="MoJee -Game">

<img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/059/652/809/large/shuhang-luan-2dbc7edd7a1b9319274c5446cc2b614.jpg?1676872944" alt="MoJee -Game">

<p>​                                      <img lazyload src="/images/loading.svg" data-src="/2022/04/11/MoJee-game/game01.jpg" class title="This is an hurricane image"></p>
<p>​                                  </p>
]]></content>
      <categories>
        <category>作品集</category>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>个人作品</tag>
        <tag>卡通</tag>
        <tag>游戏</tag>
        <tag>3D</tag>
      </tags>
  </entry>
  <entry>
    <title>Substance Designer 和 Substance Painter 材质和纹理制作流程 -- 经验笔记帖</title>
    <url>/2023/02/25/notes-on-SDtoSP/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li><p>介绍 <strong>Substance Designer</strong> 和 <strong>Substance Painter</strong> 制作材质和纹理的基本概念和使用方法。</p>
</li>
<li><p>分享个人的使用经验和心得体会。</p>
</li>
<li><p>每天都会更新自己材质学习的经验和成果。</p>
</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>下载和安装 <strong>Substance Designer</strong> 和 <strong>Substance Painter</strong>。</li>
<li>学习 <strong>Substance Designer</strong> 和 <strong>Substance Painter</strong> 的基本节点、笔刷和工具。</li>
<li>使用 <strong>Substance Designer</strong> 和 <strong>Substance Painter</strong> 制作材质和纹理。分享自己的创作过程和结果。<ul>
<li>技巧和心得体会</li>
<li>节点、笔刷和工具的应用</li>
</ul>
</li>
<li>导入到 <strong>Unreal 引擎</strong>，并使用 <strong>Substance Designer</strong> 节点控制材料的外观和属性。分享自己的操作过程和注意事项。</li>
<li>调试和优化材质和纹理，以确保最佳的效果和性能。分享自己的实践经验和建议。<ul>
<li>性能和优化问题</li>
<li>如何做到最佳效果</li>
</ul>
</li>
</ol>
<h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>在这里分享自己的经验和过程，使用列表、图片、代码等方式展示</p>
<h3 id="一、贴图格式"><a href="#一、贴图格式" class="headerlink" title="一、贴图格式"></a>一、贴图格式</h3><p>在使用<strong>Substance Designer</strong>制作完贴图并将其导入<strong>Substance Painter</strong>之前，通常需要准备以下几种不同的贴图格式：</p>
<ol>
<li><p><strong>Base Color（基础颜色）</strong>：这是<strong>Substance Painter</strong>中最重要的贴图之一，因为它用于定义材质的主要颜色信息。在<strong>Substance Designer</strong>中，你可以使用任何支持的文件格式（例如PNG，TGA，JPEG等）导出Base Color贴图。</p>
<p>​		注：<strong>Diffuse（漫反射）</strong>贴图通常用于传统的渲染管线中，在这种管线中，它用于定义材质表面的主要颜		色。在现代的基于物理的渲染（PBR）工作流程中，Diffuse贴图的作用<u><strong>已被Base Color所取代</strong></u>，因为		Base Color 更能准确地描述材质表面在不同光照条件下的颜色。</p>
</li>
<li><p><strong>Normal Map（法线贴图）</strong>：这种贴图通常用于增强模型表面的细节和凹凸感。在<strong>Substance Designer</strong>中，你可以使用标准的RGB格式导出Normal Map贴图。</p>
</li>
<li><p><strong>Ambient Occlusion（环境遮挡）</strong>：这种贴图通常用于定义模型表面的阴影和反射。在<strong>Substance Designer</strong>中，您可以使用标准的RGB格式导出Ambient Occlusion贴图。</p>
</li>
<li><p><strong>Roughness（粗糙度）</strong>：这种贴图通常用于定义材质表面的粗糙程度。在<strong>Substance Designer</strong>中，你可以使用标准的灰度图像格式（例如PNG，TGA，JPEG等）导出Roughness贴图。</p>
</li>
<li><p><strong>Metalness（金属度）</strong>：这种贴图通常用于定义材质的金属或非金属特性。在<strong>Substance Designer</strong>中，你可以使用标准的灰度图像格式（例如PNG，TGA，JPEG等）导出Metalness贴图。</p>
</li>
<li><p><strong>Height Map（高度图）</strong>：高度图是一种灰度图像，其中黑色表示表面高度最低，白色表示表面高度最高。在Substance Designer中，高度图通常用于为模型表面创建细节，例如凹凸感和纹理细节。在<strong>Substance Painter</strong>中，高度图通常用于创建表面细节，例如石头，裂纹和其他具有深度感的材质。</p>
</li>
<li><p><strong>Opacity Map（透明度贴图）</strong>：透明度贴图是一种用于控制模型表面透明度的图像。在<strong>Substance Designer</strong>中，透明度贴图通常用于创建透明材质，例如玻璃和水。在<strong>Substance Painter</strong>中，透明度贴图通常用于创建半透明和透明的材质，例如草，树叶和其他具有透明部分的材质。</p>
</li>
</ol>
<p>因此，在使用<strong>Substance Designer</strong>制作完贴图并将其导入<strong>Substance Painter</strong>之前，导出的<u><strong>标准贴图数量</strong>为 <strong>7</strong></u>。</p>
<h3 id="二、节点功能"><a href="#二、节点功能" class="headerlink" title="二、节点功能"></a>二、节点功能</h3><ul>
<li><h4 id="cube-3D"><a href="#cube-3D" class="headerlink" title="cube 3D"></a>cube 3D</h4></li>
</ul>
<p>Cube3D节点是Substance Designer中的一个节点，它可以用于创建3D物体形状，例如箱子、建筑、道具、雕塑、产品等等。使用Cube3D节点，用户可以快速方便地创建各种形状，并通过其他节点进一步调整其材质和纹理。因此，Cube3D节点是Substance Designer中一个非常实用的工具，可以用于各种应用场景，为用户提供了快速方便的形状和结构设计方案。</p>
<ul>
<li><h4 id="Edge-Detect"><a href="#Edge-Detect" class="headerlink" title="Edge Detect"></a>Edge Detect</h4></li>
</ul>
<p>Edge Detect节点是一种可以用于检测输入图像中边缘的节点 , 通常用于描边与高光。</p>
<h4 id="Grayscale-conversion（灰度转换）"><a href="#Grayscale-conversion（灰度转换）" class="headerlink" title="Grayscale conversion（灰度转换）"></a>Grayscale conversion（灰度转换）</h4><p>将彩色图像转换为灰度图像的过程, 将彩色图像转换为灰度图像可以使图像更容易分析和处理，同时减少了数据存储和传输的负担。</p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p><strong>Substance Designer</strong> 和 <strong>Substance Painter</strong> 是 3D 制作中非常强大和流行的工具，它们提供了快速、高效、灵活的材质和纹理制作方案，可以让 3D 艺术家和游戏开发人员更快地创建高质量的模型和场景。使用这些工具制作材质和纹理需要掌握各种节点、笔刷和工具的应用，并注意材质和纹理的性能和优化问题，以确保在游戏中使用时能够获得最佳的效果和性能。</p>
]]></content>
      <categories>
        <category>经验笔记</category>
        <category>美术向</category>
        <category>材质</category>
      </categories>
      <tags>
        <tag>Shader</tag>
        <tag>Substance Designer</tag>
        <tag>Substance Painter</tag>
        <tag>经验笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>作品：作品集 — PDF</title>
    <url>/2023/03/03/MyPortfolio/</url>
    <content><![CDATA[<h2 id="以下为本科至研一期间作品："><a href="#以下为本科至研一期间作品：" class="headerlink" title="以下为本科至研一期间作品："></a>以下为本科至研一期间作品：</h2><p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/060/068/764/large/shuhang-luan-01.jpg?1677751587" alt="Portfolio_china"><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/060/068/769/large/shuhang-luan-02.jpg?1677751523" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/060/068/773/large/shuhang-luan-03.jpg?1677751529" alt="Portfolio_china"><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/060/068/777/large/shuhang-luan-04.jpg?1677751535" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/060/068/784/large/shuhang-luan-05.jpg?1677751543" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/060/068/786/large/shuhang-luan-06.jpg?1677751551" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/060/068/791/large/shuhang-luan-07.jpg?1677751555" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/060/068/794/large/shuhang-luan-08.jpg?1677751560" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/060/068/797/large/shuhang-luan-09.jpg?1677751566" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/060/068/800/large/shuhang-luan-10.jpg?1677751569" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/060/068/804/large/shuhang-luan-11.jpg?1677751576" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/060/068/805/large/shuhang-luan-12.jpg?1677751580" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/060/068/809/large/shuhang-luan-13.jpg?1677751587" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/060/068/841/large/shuhang-luan-14-1.jpg?1677751673" alt="Portfolio_china"><img lazyload src="/images/loading.svg" data-src="https://cdnb.artstation.com/p/assets/images/images/060/068/843/large/shuhang-luan-15-1.jpg?1677751677" alt="Portfolio_china"></p>
<p><img lazyload src="/images/loading.svg" data-src="https://cdna.artstation.com/p/assets/images/images/060/068/814/large/shuhang-luan-16.jpg?1677751605" alt="Portfolio_china"></p>
<h4 id="注：后期的作品，暂时以博客文章形式上传"><a href="#注：后期的作品，暂时以博客文章形式上传" class="headerlink" title="注：后期的作品，暂时以博客文章形式上传"></a>注：后期的作品，暂时以博客文章形式上传</h4>]]></content>
      <categories>
        <category>作品集</category>
        <category>作品集-PDF文件</category>
      </categories>
      <tags>
        <tag>卡通</tag>
        <tag>游戏</tag>
        <tag>3D</tag>
        <tag>个人作品集</tag>
      </tags>
  </entry>
</search>
